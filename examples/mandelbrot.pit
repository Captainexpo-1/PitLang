fn imaginary(a_0, b_0) {
    return {
        a: a_0,
        b: b_0
    };
}

fn imaginary_squared(num) {
    //(a + bi)^2 = (a^2 - b^2) + 2abi
    return imaginary(num.a*num.a - num.b*num.b, 2*num.a*num.b);
}

fn imaginary_add(num1, num2) {
    return imaginary(num1.a + num2.a, num1.b + num2.b);
}

fn imaginary_abs(i){
    return i.a*i.a+i.b*i.b;
}

// z(n+1) = (z(n))^2 + c
// z(0) = 0
fn mandelbrot(x, y) {
    fn recurse(n, c) {
        if n == 0 {
            return c;
        }
        return imaginary_add(imaginary_squared(recurse(n - 1, c)), c);
    }
    let r = recurse(4, imaginary(x, y));
    std.println(imaginary_abs(r));
}

mandelbrot(std.argv().get(2).to_float(), std.argv().get(3).to_float())