fn sort_list(list) {
    let n = list.length();
    let i = 0;
    while (i < n) {
        let j = 0;
        while (j < (n - i - 1)) {
            if (list.get(j) > list.get(j + 1)) {
                let temp = list.get(j);
                list.set(j, list.get(j + 1));
                list.set(j + 1, temp);
            }
            ++j;
        }
        ++i;
    }
}

fn main(){
    let list = [];
    let i = 0;

    if std.argv().length() < 3 {
        std.println("Usage: pitlang bubblesort.pit <number>");
        return;
    }

    let arg = std.argv().get(2).to_int();

    while (i < arg) {
        list.push((std.random() * arg).round());
        ++i;
    }
    std.println(list); // Unsorted list
    sort_list(list); // Sort the list in place
    std.println(list); // Sorted list
}


main();